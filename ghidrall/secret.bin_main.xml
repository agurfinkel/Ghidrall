<function>
  <return>
    <type>undefined8</type>
    <size>8</size>
  </return>
  <name>main</name>
  <address>6c3</address>
  <args>
    
  </args>
  <locals>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar1</name>
    </var>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar2</name>
    </var>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar3</name>
    </var>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar4</name>
    </var>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar5</name>
    </var>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar6</name>
    </var>
    <var>
      <type>int32_t</type>
      <size>4</size>
      <name>iVar7</name>
    </var>
    <var>
      <type>int64_t</type>
      <size>8</size>
      <name>var_1h</name>
    </var>
  </locals>
  <block_graph>
    <block>
      <label>
        <address>6c3</address>
      </label>
      <ops>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar1</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar2</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar3</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar4</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar5</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar6</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CALL</opname>
          <output>
            <symbol>iVar7</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>sym.imp.rand</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_LEFT</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar1</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>5</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar1</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001a4</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar1</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001f6</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001a4</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x100001ad</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001f6</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001ac</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar1</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001ac</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x100001ad</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x10000248</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000248</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x17</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar2</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001b0</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001fe</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001b0</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x100001b9</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001fe</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001b8</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001b8</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x100001b9</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x10000249</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000249</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>8</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar3</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x16</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar3</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001bc</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar3</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x10000206</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001bc</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x100001c5</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000206</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001c4</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar3</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001c4</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x100001c5</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x1000024a</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000024a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>0x19</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar4</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x2a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar4</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001c8</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar4</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x1000020e</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001c8</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x100001d1</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000020e</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001d0</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar4</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001d0</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x100001d1</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x1000024b</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000024b</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>0x14</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x10000214</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar5</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0xf</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar5</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000214</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001d4</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar5</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x1000021a</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001d4</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x100001dd</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000021a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001dc</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar5</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001dc</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x100001dd</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x1000024c</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000024c</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>0xb</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x10000224</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar6</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x19</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar6</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000224</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001e0</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar6</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x1000022a</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001e0</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x100001e9</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000022a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x100001e8</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar6</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001e8</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x100001e9</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x1000024d</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000024d</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>0x10</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar7</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1d</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SRIGHT</opname>
          <output>
            <symbol>iVar7</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>2</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_SDIV</opname>
          <output>
            <symbol>unique0x100001ec</symbol>
            <type>int32_t</type>
            <size>4</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar7</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0x1a</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x10000238</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x100001ec</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_MULT</opname>
          <output>
            <symbol>unique0x10000237</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000238</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>-0x1a</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>SUBPIECE</opname>
          <output>
            <symbol>unique0x10000236</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>iVar7</symbol>
              <type>int32_t</type>
              <size>4</size>
            </input>
            <input>
              <symbol>0</symbol>
              <type>undefined4</type>
              <size>4</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_ADD</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x10000236</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x10000237</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CAST</opname>
          <output>
            <symbol>unique0x1000024e</symbol>
            <type>char</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000000</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>INT_EQUAL</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>unique0x1000024e</symbol>
              <type>char</type>
              <size>1</size>
            </input>
            <input>
              <symbol>4</symbol>
              <type>char</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>BOOL_AND</opname>
          <output>
            <symbol>unique0x10000245</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>BOOL_AND</opname>
          <output>
            <symbol>unique0x10000243</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x10000245</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>BOOL_AND</opname>
          <output>
            <symbol>unique0x10000241</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x10000243</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>BOOL_AND</opname>
          <output>
            <symbol>unique0x1000023f</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x10000241</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>BOOL_AND</opname>
          <output>
            <symbol>unique0x1000023d</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x1000023f</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>BOOL_AND</opname>
          <output>
            <symbol>register0x00000206</symbol>
            <type>bool</type>
            <size>1</size>
          </output>
          <inputs>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
            <input>
              <symbol>unique0x1000023d</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>CBRANCH</opname>
          <inputs>
            <input>
              <symbol>0x86c</symbol>
              <type>code</type>
              <size>1</size>
            </input>
            <input>
              <symbol>register0x00000206</symbol>
              <type>bool</type>
              <size>1</size>
            </input>
          </inputs>
        </op>
      </ops>
      <out_branches>
        <branch_target>0x0000086c</branch_target>
        <branch_target>0x00000867</branch_target>
      </out_branches>
    </block>
    <block>
      <label>
        <address>867</address>
      </label>
      <ops>
        <op>
          <opname>CALL</opname>
          <inputs>
            <input>
              <symbol>sym.path_goal</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
      </ops>
      <out_branches>
        <branch_target>0x0000086c</branch_target>
      </out_branches>
    </block>
    <block>
      <label>
        <address>86c</address>
      </label>
      <ops>
        <op>
          <opname>COPY</opname>
          <output>
            <symbol>register0x00000000</symbol>
            <type>undefined8</type>
            <size>8</size>
          </output>
          <inputs>
            <input>
              <symbol>0</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
        <op>
          <opname>RETURN</opname>
          <inputs>
            <input>
              <symbol>0</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
            <input>
              <symbol>register0x00000000</symbol>
              <type>undefined8</type>
              <size>8</size>
            </input>
          </inputs>
        </op>
      </ops>
      <out_branches>
      </out_branches>
    </block>
  </block_graph>
</function>
